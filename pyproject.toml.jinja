[tool.poetry]
name = "{{ project_name }}"
version = "0.1.0"
description = "{{ project_description }}"
authors = ["{{ author }} <{{ author_email }}>"]
readme = "README.md"


[tool.poetry.dependencies]
python = ">=3.10, <3.12"

[[tool.poetry.source]]
name = "PyPI"
priority = "default"


[tool.ruff]
select = ["E", "F", "I", "N", "D", "RUF"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "tests"
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.pytest.ini_options]
addopts = ["--cov={{ project_name|replace('-', '_') }}",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "--cov-config=pyproject.toml",
    "-m not slow",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
omit = [
    "*_flow.py",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
